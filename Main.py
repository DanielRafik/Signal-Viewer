# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'test5.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from asyncio.windows_events import NULL
import imghdr
from re import X
from turtle import pen, pencolor, rt
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QDialog, QApplication, QFileDialog, QInputDialog, QAction, QTextEdit, QFontDialog, QColorDialog, QGridLayout,QLineEdit,QHBoxLayout
from PyQt5.uic import loadUi
from PyQt5.QtGui import QIcon, QGuiApplication
from PyQt5.QtPrintSupport import QPrintDialog, QPrinter, QPrintPreviewDialog
from PyQt5.QtCore import QFileInfo, QTimer
import sys
from fpdf import FPDF
import matplotlib
from matplotlib import pyplot as plt
from matplotlib import image
from matplotlib.axis import XAxis, YAxis
import pyqtgraph
import numpy as np
from collections import namedtuple
import pyqtgraph.exporters
import scipy.io
from scipy import signal
import h5py
import time
from matplotlib.animation import FuncAnimation
from random import randint


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        self.int=0
        self.scaling_factor= 1000
        self.scaling_factor_i= 0
        self.k = 0
        self.zoom = 1
        self.fin = 700
        self.size=0
        global ChannelTwoSelected
        global ChannelThreeSelected
        self.ChannelTwoSelected = False
        self.ChannelThreeSelected = False
        pyqtgraph.setConfigOptions(antialias=True)
        self.fig1 , self.ax = plt.subplots()
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1094, 546)
        font = QtGui.QFont()
        font.setFamily("Myanmar Text")
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(30, 40, 181, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.ProcessControl_GroupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.ProcessControl_GroupBox.setGeometry(QtCore.QRect(880, 350, 191, 131))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.ProcessControl_GroupBox.setFont(font)
        self.ProcessControl_GroupBox.setFlat(False)
        self.ProcessControl_GroupBox.setCheckable(False)
        self.ProcessControl_GroupBox.setObjectName("ProcessControl_GroupBox")
        self.Play_PushButton = QtWidgets.QPushButton(self.ProcessControl_GroupBox)
        self.Play_PushButton.setGeometry(QtCore.QRect(20, 30, 71, 28))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.Play_PushButton.setFont(font)
        self.Play_PushButton.setObjectName("Play_PushButton")
        self.Play_PushButton.clicked.connect(self.playbutton)
        self.Pause_PushButton = QtWidgets.QPushButton(self.ProcessControl_GroupBox)
        self.Pause_PushButton.setGeometry(QtCore.QRect(100, 30, 71, 28))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.Pause_PushButton.setFont(font)
        self.Pause_PushButton.setObjectName("Pause_PushButton")
        self.Pause_PushButton.clicked.connect(self.pausebutton)
        self.Report_PushButton = QtWidgets.QPushButton(self.ProcessControl_GroupBox)
        self.Report_PushButton.setGeometry(QtCore.QRect(20, 80, 151, 28))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.rename_push = QtWidgets.QPushButton(MainWindow)
        self.rename_push.setObjectName("Renamer")
        self.rename_push.setGeometry(QtCore.QRect(550, 370, 111, 21))
        self.rename_push.setFont(font)
        self.rename_push.setText("Rename")
        self.rename_push.clicked.connect(self.SignalNames)
        self.Report_PushButton.setFont(font)
        self.Report_PushButton.setObjectName("Report_PushButton")
        self.Report_PushButton.clicked.connect(self.exportfiles)
        self.Hide_GroupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.Hide_GroupBox.setGeometry(QtCore.QRect(260, 390, 191, 91))
        self.Hide_GroupBox.setObjectName("Hide_GroupBox")
        self.Channel1_CheckBox = QtWidgets.QCheckBox(self.Hide_GroupBox)
        self.Channel1_CheckBox.setGeometry(QtCore.QRect(10, 20, 81, 20))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.Channel1_CheckBox.setFont(font)
        self.Channel1_CheckBox.setObjectName("Channel1_CheckBox")
        self.Channel2_CheckBox = QtWidgets.QCheckBox(self.Hide_GroupBox)
        self.Channel2_CheckBox.setGeometry(QtCore.QRect(10, 40, 81, 20))
        self.Channel2_CheckBox.setObjectName("Channel2_CheckBox")
        self.Channel3_CheckBox = QtWidgets.QCheckBox(self.Hide_GroupBox)
        self.Channel3_CheckBox.setGeometry(QtCore.QRect(10, 60, 81, 20))
        self.Channel3_CheckBox.setObjectName("Channel3_CheckBox")
        self.Figure_Slider = QtWidgets.QSlider(self.centralwidget)
        self.Figure_Slider.setGeometry(QtCore.QRect(20, 340, 651, 22))
        self.Figure_Slider.setOrientation(QtCore.Qt.Horizontal)
        self.Figure_Slider.setObjectName("Figure_Slider")
        self.Figure_Slider.setMinimum(0)
        self.Figure_Slider.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.Figure_Slider.setTickInterval(10)
        self.Figure_Slider.sliderMoved.connect(self.ChangeValue)
        self.Figure_Slider.valueChanged.connect(self.ChangeValue)
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(542, 400, 131, 22))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(542, 430, 131, 22))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setGeometry(QtCore.QRect(542, 460, 131, 22))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.Channel1_Label = QtWidgets.QLabel(self.centralwidget)
        self.Channel1_Label.setGeometry(QtCore.QRect(474, 400, 61, 21))
        self.Channel1_Label.setObjectName("Channel1_Label")
        self.Channnel_Label = QtWidgets.QLabel(self.centralwidget)
        self.Channnel_Label.setGeometry(QtCore.QRect(474, 430, 61, 21))
        self.Channnel_Label.setObjectName("Channnel_Label")
        self.Channel3_Label = QtWidgets.QLabel(self.centralwidget)
        self.Channel3_Label.setGeometry(QtCore.QRect(474, 460, 61, 21))
        self.Channel3_Label.setObjectName("Channel3_Label")
        self.BrowseFiles_PushButton = QtWidgets.QPushButton(self.centralwidget)
        self.BrowseFiles_PushButton.setGeometry(QtCore.QRect(30, 450, 201, 31))
        font = QtGui.QFont()
        font.setFamily("Myanmar Text")
        font.setBold(True)
        font.setWeight(75)
        self.BrowseFiles_PushButton.setFont(font)
        self.BrowseFiles_PushButton.setObjectName("BrowseFiles_PushButton")
        self.BrowseFiles_PushButton.clicked.connect(self.browsefiles)
        self.CineSpeed_Slider = QtWidgets.QSlider(self.centralwidget)
        self.CineSpeed_Slider.setValue(0)
        self.CineSpeed_Slider.setGeometry(QtCore.QRect(140, 380, 91, 22))
        self.CineSpeed_Slider.setOrientation(QtCore.Qt.Horizontal)
        self.CineSpeed_Slider.setObjectName("CineSpeed_Slider")
        self.CineSpeed_Label = QtWidgets.QLabel(self.centralwidget)
        self.CineSpeed_Label.setGeometry(QtCore.QRect(30, 380, 81, 21))
        self.CineSpeed_Label.setObjectName("CineSpeed_Label")
        self.Spectrogram_GroupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.Spectrogram_GroupBox_2.setGeometry(QtCore.QRect(690, 350, 181, 131))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.Spectrogram_GroupBox_2.setFont(font)
        self.Spectrogram_GroupBox_2.setObjectName("Spectrogram_GroupBox_2")
        self.Range_ComboBox = QtWidgets.QComboBox(self.Spectrogram_GroupBox_2)
        self.Range_ComboBox.setGeometry(QtCore.QRect(20, 50, 61, 61))
        self.Range_ComboBox.setObjectName("Range_ComboBox")
        self.Range_ComboBox.addItem("")
        self.Range_ComboBox.addItem("")
        self.Range_ComboBox.addItem("")
        self.Range_ComboBox.addItem("")
        self.Max_Label = QtWidgets.QLabel(self.Spectrogram_GroupBox_2)
        self.Max_Label.setGeometry(QtCore.QRect(100, 20, 31, 16))
        self.Max_Label.setObjectName("Max_Label")
        self.Min_Label = QtWidgets.QLabel(self.Spectrogram_GroupBox_2)
        self.Min_Label.setGeometry(QtCore.QRect(150, 20, 55, 16))
        self.Min_Label.setObjectName("Min_Label")
        self.Min_Slider = QtWidgets.QSlider(self.Spectrogram_GroupBox_2)
        self.Min_Slider.setGeometry(QtCore.QRect(150, 40, 22, 71))
        self.Min_Slider.setOrientation(QtCore.Qt.Vertical)
        self.Min_Slider.setObjectName("Min_Slider")
        self.Range_Label = QtWidgets.QLabel(self.Spectrogram_GroupBox_2)
        self.Range_Label.setGeometry(QtCore.QRect(30, 20, 41, 31))
        self.Range_Label.setObjectName("Range_Label")
        self.Max_Slider = QtWidgets.QSlider(self.Spectrogram_GroupBox_2)
        self.Max_Slider.setGeometry(QtCore.QRect(110, 40, 22, 71))
        self.Max_Slider.setOrientation(QtCore.Qt.Vertical)
        self.Max_Slider.setObjectName("Max_Slider")
        self.SelectChannel_ComboBox = QtWidgets.QComboBox(self.centralwidget)
        self.SelectChannel_ComboBox.setGeometry(QtCore.QRect(30, 410, 101, 31))
        self.SelectChannel_ComboBox.setEditable(False)
        self.SelectChannel_ComboBox.setObjectName("SelectChannel_ComboBox")
        self.SelectChannel_ComboBox.addItem("")
        self.SelectChannel_ComboBox.addItem("")
        self.SelectChannel_ComboBox.addItem("")
        self.splitter_2 = QtWidgets.QSplitter(self.centralwidget)
        self.splitter_2.setGeometry(QtCore.QRect(20, 60, 1041, 271))
        self.splitter_2.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_2.setObjectName("splitter_2")
        self.Figure_groupBox = QtWidgets.QGroupBox(self.splitter_2)
        self.Figure_groupBox.setObjectName("Figure_groupBox")
        self.Figure_Widget = PlotWidget(self.Figure_groupBox)
        self.Figure_Widget.setGeometry(QtCore.QRect(0, 20, 661, 251))
        self.Figure_Widget.setObjectName("Figure_Widget")
        self.Spectrogram_GroupBox = QtWidgets.QGroupBox(self.splitter_2)
        self.Spectrogram_GroupBox.setObjectName("Spectrogram_GroupBox")
        self.SpectrogramSelectChannel_Label = QtWidgets.QLabel(self.Spectrogram_GroupBox)
        self.SpectrogramSelectChannel_Label.setGeometry(QtCore.QRect(80, 230, 91, 41))
        self.SpectrogramSelectChannel_Label.setObjectName("SpectrogramSelectChannel_Label")
        self.ShowSpectrogram = QtWidgets.QPushButton(self.Spectrogram_GroupBox)
        self.ShowSpectrogram.setGeometry(QtCore.QRect(410, 120, 71, 28))
        self.ShowSpectrogram.setText('Show')
        self.ShowSpectrogram.clicked.connect(self.spectrogram)
        self.comboBox_3 = QtWidgets.QComboBox(self.Spectrogram_GroupBox)
        self.comboBox_3.setGeometry(QtCore.QRect(170, 240, 151, 21))
        self.comboBox_3.setEditable(False)
        self.comboBox_3.setObjectName("comboBox_3")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.Spectrogram_Widget = pyqtgraph.GraphicsLayoutWidget(self.Spectrogram_GroupBox)
        self.Spectrogram_Widget.setGeometry(QtCore.QRect(0, 20, 381, 211))
        self.Spectrogram_Widget.setObjectName("Spectrogram_Widget")
        self.ZoomOut_PushButton = QtWidgets.QPushButton(self.centralwidget)
        self.ZoomOut_PushButton.setGeometry(QtCore.QRect(117, 10, 91, 28))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.ZoomOut_PushButton.setFont(font)
        self.ZoomOut_PushButton.setObjectName("ZoomOut_PushButton")
        self.SignalColor_ComboBox = QtWidgets.QComboBox(self.centralwidget)
        self.SignalColor_ComboBox.setGeometry(QtCore.QRect(140, 410, 91, 31))
        self.SignalColor_ComboBox.setObjectName("SignalColor_ComboBox")
        self.SignalColor_ComboBox.addItem("")
        self.SignalColor_ComboBox.addItem("")
        self.SignalColor_ComboBox.addItem("")
        self.ZoomIn_PushButton = QtWidgets.QPushButton(self.centralwidget)
        self.ZoomIn_PushButton.setGeometry(QtCore.QRect(20, 10, 91, 28))
        self.ZoomIn_PushButton.clicked.connect(self.ZoomIn)
        self.ZoomOut_PushButton.clicked.connect(self.ZoomOut)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.ZoomIn_PushButton.setFont(font)
        self.ZoomIn_PushButton.setObjectName("ZoomIn_PushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1094, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.pencolors_channels=['r','r','r']
        self.comboBox_3.activated.connect(self.spectrogram) 


    def browsefiles(self):
        global selected
        selected = str(self.SelectChannel_ComboBox.currentText())
        global fname
        fname=QFileDialog.getOpenFileName(None, str("Browse Files"), None, str("Signal Files (*.mat)"))
        signal = scipy.io.loadmat(str(fname[0]))
        xaxis=signal['val']
        xnew=np.array(xaxis)
        xnew=xnew.flatten()
        xnewer=np.arange(1,len(xnew)+1,1)
        yaxis=signal['val']
        global ynew
        ynew=np.array(yaxis)
        ynew=ynew.flatten()
        global xxis1
        global yxis1
        global xxis2
        global yxis2
        global xxis
        global yxis
        if int(self.SelectChannel_ComboBox.currentIndex()) == 0:
            xxis = xnewer
            yxis = ynew
        elif int(self.SelectChannel_ComboBox.currentIndex()) == 1:
            xxis1 = xnewer
            yxis1 = ynew
            self.ChannelTwoSelected = True
        elif int(self.SelectChannel_ComboBox.currentIndex()) == 2:
            xxis2 = xnewer
            yxis2 = ynew
            self.ChannelThreeSelected=True
        
        self.status_zoom = 0
        self.status_slider = 0
        self.update_plot()
        self.timer = QtCore.QTimer()
        self.timer.setInterval(100)
        self.timer.timeout.connect(self.update_plot)
        self.timer.start()
        
    def update_plot(self):
        speed = int(self.CineSpeed_Slider.value())
        self.pencolors=['r','g','b']
        global colorindex
        if self.SelectChannel_ComboBox.currentIndex()==0:
            colorindex = int(self.SignalColor_ComboBox.currentIndex())
            self.pencolors_channels[0]=self.pencolors[colorindex]
        elif self.SelectChannel_ComboBox.currentIndex()==1:
            colorindex = int(self.SignalColor_ComboBox.currentIndex())
            self.pencolors_channels[1]=self.pencolors[colorindex]      
        elif self.SelectChannel_ComboBox.currentIndex()==2:
            colorindex = int(self.SignalColor_ComboBox.currentIndex())
            self.pencolors_channels[2]=self.pencolors[colorindex]
        self.Figure_Widget.clear()
        self.Figure_Widget.setYRange(np.min(yxis),np.max(yxis))
        if self.k == 0 :
            self.Figure_Widget.setXRange(0, self.scaling_factor)
        elif self.k >= 600 and self.status_slider == 0  :
            self.Figure_Widget.setXRange(self.scaling_factor_i, self.scaling_factor)
            self.scaling_factor = self.scaling_factor + 10 + int(speed/10)
            self.scaling_factor_i = self.scaling_factor_i + 10 + int(speed/10)
        elif self.size > 0:
            self.Figure_Widget.setXRange((self.int + self.size) , (self.fin +self.size))
        if self.Channel1_CheckBox.isChecked() == False:
            self.plt1 = self.Figure_Widget.plot(xxis[0:self.k], yxis[0:self.k], pen=self.pencolors_channels[0])
        if self.ChannelTwoSelected==True and self.Channel2_CheckBox.isChecked() == False:
            self.plt2 = self.Figure_Widget.plot(xxis1[0:self.k], yxis1[0:self.k], pen=self.pencolors_channels[1])
        if self.ChannelThreeSelected==True and self.Channel3_CheckBox.isChecked() == False:
            self.plt3 = self.Figure_Widget.plot(xxis2[0:self.k], yxis2[0:self.k], pen=self.pencolors_channels[2])
        self.Figure_Slider.setMaximum(self.scaling_factor)
        if self.status_zoom == 0 and self.status_slider == 0  :
            self.k = self.k + 10 + int(speed/10)
        if self.k > np.max(xxis):
            self.timer.stop()
            self.k= 0
            self.scaling_factor = 600
            self.scaling_factor_i= 0
            self.zoom = 1

    def SignalNames(self):
        _translate = QtCore.QCoreApplication.translate
        self.chan1name = str(self.lineEdit.text())
        self.chan2name = str(self.lineEdit_2.text())
        self.chan3name = str(self.lineEdit_3.text())
        self.comboBox_3.setItemText(0, _translate("MainWindow", self.chan1name))
        self.comboBox_3.setItemText(1, _translate("MainWindow", self.chan2name))
        self.comboBox_3.setItemText(2, _translate("MainWindow", self.chan2name))
    
    
    def ChangeValue(self):
        self.status_slider = 1
        self.timer.stop()
        self.size = self.Figure_Slider.value()
        self.update_plot()
    
    
    def pausebutton(self):
        self.timer.stop()

    def SignalNames(self):
        _translate = QtCore.QCoreApplication.translate
        self.chan1name = str(self.lineEdit.text())
        self.chan2name = str(self.lineEdit_2.text())
        self.chan3name = str(self.lineEdit_3.text())
        self.comboBox_3.setItemText(0, _translate("MainWindow", self.chan1name))
        self.comboBox_3.setItemText(1, _translate("MainWindow", self.chan2name))
        self.comboBox_3.setItemText(2, _translate("MainWindow", self.chan3name))
    
    def ZoomIn(self):
        self.timer.stop()
        self.size= 3
        self.status_zoom = 1
        self.status_slider =1
        if self.zoom > 1 :
            self.zoom = self.zoom / 2
            self.fin = self.fin / 2
        elif self.zoom >=0.25 and self.zoom <= 1 :
            self.zoom = self.zoom / 2
            self.fin = self.fin * self.zoom
        self.update_plot() 

    def ZoomOut(self):
        self.timer.stop()
        self.size= 3
        self.status_zoom = 1
        self.status_slider =1
        if self.zoom > 1 :
            self.zoom = self.zoom * 2
            self.fin = self.fin * 2
        elif self.zoom >=0.25 and self.zoom <= 1 :
            self.zoom = self.zoom * 2
            self.fin = self.fin * self.zoom
        self.update_plot()

     

    def exportfiles(self):
        pdfname=QFileDialog.getSaveFileName(None, str("Save PDF"), None, str("PDF Files (*.pdf)"))
        print(pdfname[0])
        if pdfname !='':
                 pdf = FPDF()
                 pdf.add_page()
                 pdf.set_font("Arial", size = 18)
                 pdf.cell(200, 10, txt = "Report", ln = 1, align = 'C')
                 pdf.set_font("Arial", size = 12)
                 pdf.cell(200, 10, txt = "Signal", ln = 2, align = 'L')
                 signalexporter = pyqtgraph.exporters.ImageExporter(self.Figure_Widget.plotItem)
                 signalexporter.parameters()['width'] = 500
                 signalexporter.export('temp1.png')
                 pdf.image(str("temp1.png"))
                 pdf.cell(200, 10, txt = "Spectrogram", ln = 3, align = 'L')
                 spectroexporter = pyqtgraph.exporters.ImageExporter(self.Spectrogram_Widget.scene())
                 spectroexporter.parameters()['width'] = 300
                 spectroexporter.export('temp2.png')
                 pdf.image(str("temp2.png"))
                 pdf.output(str(pdfname[0]))
    
    def spectrogram(self):
        self.check_comboBox_3_index()
        self.Spectrogram_Widget.clear()
        f, t, spectrogram = scipy.signal.spectrogram(yfinal)
        p1 = self.Spectrogram_Widget.addPlot()
        img = pyqtgraph.ImageItem()
        p1.addItem(img)
        hist = pyqtgraph.HistogramLUTItem()
        hist.setImageItem(img)
        hist.gradient.restoreState(
        {'mode': 'rgb',
        'ticks': [(0.5, (194, 0, 80, 255)),
                    (1.0, (254, 233, 54, 255)),
                    (0.0, (0, 0, 28, 255))]})
        self.Spectrogram_Widget.addItem(hist)
        hist.setLevels(np.min(spectrogram), np.max(spectrogram))
        img.setImage(spectrogram)
       


    def check_comboBox_3_index(self):
        global yfinal
        if self.comboBox_3.currentIndex() == 0:
                yfinal =yxis
        if self.comboBox_3.currentIndex() == 1:
                yfinal =yxis1
        if self.comboBox_3.currentIndex() == 2:
                yfinal =yxis2 
               
    def playbutton(self):
        signal = scipy.io.loadmat(str(fname[0]))
        xaxis=signal['val']
        xnew=np.array(xaxis)
        xnew=xnew.flatten()
        xnewer=np.arange(1,len(xnew)+1,1)
        yaxis=signal['val']
        global ynew
        ynew=np.array(yaxis)
        ynew=ynew.flatten()
        if int(self.SelectChannel_ComboBox.currentIndex()) == 0:
            global xxis
            global yxis
            xxis = xnewer
            yxis = ynew
        elif int(self.SelectChannel_ComboBox.currentIndex()) == 1:
            global xxis1
            global yxis1
            xxis1 = xnewer
            yxis1 = ynew
        elif int(self.SelectChannel_ComboBox.currentIndex()) == 2:
            global xxis2
            global yxis2
            xxis2 = xnewer
            yxis2 = ynew
        self.status_zoom = 0
        self.status_slider = 0
        self.update_plot()
        self.timer = QtCore.QTimer()
        self.timer.setInterval(100)
        self.timer.timeout.connect(self.update_plot)
        self.timer.start()


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.ProcessControl_GroupBox.setTitle(_translate("MainWindow", "Process Control"))
        self.Play_PushButton.setText(_translate("MainWindow", "Play"))
        self.Pause_PushButton.setText(_translate("MainWindow", "Pause"))
        self.Report_PushButton.setText(_translate("MainWindow", "Report"))
        self.Hide_GroupBox.setTitle(_translate("MainWindow", "Hide"))
        self.Channel1_CheckBox.setText(_translate("MainWindow", "Channel 1"))
        self.Channel2_CheckBox.setText(_translate("MainWindow", "Channel 2"))
        self.Channel3_CheckBox.setText(_translate("MainWindow", "Channel 3"))
        self.Channel1_Label.setText(_translate("MainWindow", "Channel 1"))
        self.Channnel_Label.setText(_translate("MainWindow", "Channel 2"))
        self.Channel3_Label.setText(_translate("MainWindow", "Channel 3"))
        self.BrowseFiles_PushButton.setText(_translate("MainWindow", " Browse Files"))
        self.CineSpeed_Label.setText(_translate("MainWindow", "Cine Speed"))
        self.Spectrogram_GroupBox_2.setTitle(_translate("MainWindow", "Spectrogram "))
        self.Range_ComboBox.setItemText(0, _translate("MainWindow", "Red"))
        self.Range_ComboBox.setItemText(1, _translate("MainWindow", "Yellow"))
        self.Range_ComboBox.setItemText(2, _translate("MainWindow", "Green"))
        self.Range_ComboBox.setItemText(3, _translate("MainWindow", "Blue"))
        self.Max_Label.setText(_translate("MainWindow", "Max"))
        self.Min_Label.setText(_translate("MainWindow", "Min"))
        self.Range_Label.setText(_translate("MainWindow", "Range"))
        self.SelectChannel_ComboBox.setItemText(0, _translate("MainWindow", "Channel 1"))
        self.SelectChannel_ComboBox.setItemText(1, _translate("MainWindow", "Channel 2"))
        self.SelectChannel_ComboBox.setItemText(2, _translate("MainWindow", "Channel 3"))
        self.Figure_groupBox.setTitle(_translate("MainWindow", "Figure"))
        self.comboBox_3.setItemText(0, _translate("MainWindow", "Channel 1"))
        self.comboBox_3.setItemText(1, _translate("MainWindow", "Channel 2"))
        self.comboBox_3.setItemText(2, _translate("MainWindow", "Channel 3"))
        self.Spectrogram_GroupBox.setTitle(_translate("MainWindow", "Spectrogram"))
        self.SpectrogramSelectChannel_Label.setText(_translate("MainWindow", "Select channel"))
        self.ZoomOut_PushButton.setText(_translate("MainWindow", "Zoom out"))
        self.SignalColor_ComboBox.setItemText(0, _translate("MainWindow", "Red"))
        self.SignalColor_ComboBox.setItemText(1, _translate("MainWindow", "Green"))
        self.SignalColor_ComboBox.setItemText(2, _translate("MainWindow", "Blue"))
        self.ZoomIn_PushButton.setText(_translate("MainWindow", "Zoom in"))
from pyqtgraph import PlotWidget


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
